{
  "{\"sourceRoot\":\"/home/pandahome/Becode/test_p_1/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/pandahome/Becode/test_p_1\",\"filename\":\"/home/pandahome/Becode/test_p_1/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/pandahome/Becode/test_p_1\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/pandahome/Becode/test_p_1/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/pandahome/Becode/test_p_1",
      "filename": "/home/pandahome/Becode/test_p_1/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/pandahome/Becode/test_p_1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/pandahome/Becode/test_p_1/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/pandahome/Becode/test_p_1/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/pandahome/Becode/test_p_1/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"dotenv/config\");\n\nvar _page_ = _interopRequireDefault(require(\"./page_1.js\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  type Query {\\n    users: [User!]\\n    me: User\\n    user(id : ID!) : User\\n  }\\n  type User {\\n    username: String!\\n    id :ID!\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\n//1 . On affcihe dans la console une valeur stockée dans le .env\nconsole.log(process.env.MY_SECRET); // On appelle notre fonction (\"concole log depuis le fichier page 1\")\n\nvar msg = require(\"./page_1.js\"); // On lance le serveur express en l'initalisant dans une constante\n\n\nvar app = (0, _express[\"default\"])(); // On construit ici le schema de notre \"base de donnée\"\n//Le schema est un liste de definitions de type. On commence par le type Query puis on remplis les different champ(User) de la DB\n//gql´...` est le format GraphQl de DB\n//Pour le premier \"users : [User!]\" On cree un type users que tous les users possede par defaut et qui est obligatoire\n//Pour le second \"me :User\" On definis un objet me de typer User. Dans ce ca il a le \"scalar type(champ classique)\" username(string) et id(ID)\n//'!' veut dire que ces champs ne peuvent pas etre null \n\nvar schema = (0, _apolloServerExpress.gql)(_templateObject()); //Le user indique le squellette de notre DB, ici on a types qui sont username et ID\n\nvar _users = {\n  1: {\n    id: '1',\n    username: 'Robin Wieruch'\n  },\n  2: {\n    id: '2',\n    username: 'Dave Davids'\n  }\n}; // On defenis une variable \"me\" qui prend comme champ le premier user comme champ\n\nvar _me = _users[1]; // Le resolvers permet d'aller chercher les donnée dans la DB c'est ici que tous les query devront etre effectuée\n\nvar resolvers = {\n  Query: {\n    // On renvoie l'ensemble des donnée de la table users \n    users: function users() {\n      return Object.values(_users);\n    },\n    // On renvoie toutes les donées de 'me' \n    me: function me() {\n      return _me;\n    },\n    //On renvoie les donnée d'un user ciblé en fonction de son ID\n    user: function user(parent, _ref) {\n      var id = _ref.id;\n      return _users[id];\n    }\n  }\n}; //On lance le serveur Apollo\n\nvar server = new _apolloServerExpress.ApolloServer({\n  // Definitions des types -> schema et requete faite avec resolvers\n  typeDefs: schema,\n  resolvers: resolvers\n}); //On utilise ici 'applyMiddleware' pour lancer express avec le serveur appollo pour lancer Graphql playground\n//On lance dans le navigateur localhost:8000/graphql pour acceder a la page de graphql playground\n\nserver.applyMiddleware({\n  app: app,\n  path: '/graphql'\n}); //On lance notre page sur le port 8000\n\napp.listen({\n  port: 8000\n}, function () {\n  //Message d'affichage lorsque le serveur est en ligne\n  console.log('Apollo Server on http://localhost:8000/graphql');\n}); //Lancement de cors\n\napp.use((0, _cors[\"default\"])());\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvbnNvbGUiLCJsb2ciLCJwcm9jZXNzIiwiZW52IiwiTVlfU0VDUkVUIiwibXNnIiwicmVxdWlyZSIsImFwcCIsInNjaGVtYSIsImdxbCIsInVzZXJzIiwiaWQiLCJ1c2VybmFtZSIsIm1lIiwicmVzb2x2ZXJzIiwiUXVlcnkiLCJPYmplY3QiLCJ2YWx1ZXMiLCJ1c2VyIiwicGFyZW50Iiwic2VydmVyIiwiQXBvbGxvU2VydmVyIiwidHlwZURlZnMiLCJhcHBseU1pZGRsZXdhcmUiLCJwYXRoIiwibGlzdGVuIiwicG9ydCIsInVzZSJdLCJtYXBwaW5ncyI6Ijs7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7OztBQUNBO0FBQ0FBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsU0FBeEIsRSxDQUNBOztBQUNBLElBQUlDLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGFBQUQsQ0FBakIsQyxDQUlBOzs7QUFDQSxJQUFNQyxHQUFHLEdBQUcsMEJBQVosQyxDQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQSxJQUFNQyxNQUFNLE9BQUdDLHdCQUFILG9CQUFaLEMsQ0FXQTs7QUFDQSxJQUFJQyxNQUFLLEdBQUc7QUFDVixLQUFHO0FBQ0RDLElBQUFBLEVBQUUsRUFBRSxHQURIO0FBRURDLElBQUFBLFFBQVEsRUFBRTtBQUZULEdBRE87QUFLVixLQUFHO0FBQ0RELElBQUFBLEVBQUUsRUFBRSxHQURIO0FBRURDLElBQUFBLFFBQVEsRUFBRTtBQUZUO0FBTE8sQ0FBWixDLENBVUE7O0FBQ0EsSUFBTUMsR0FBRSxHQUFHSCxNQUFLLENBQUMsQ0FBRCxDQUFoQixDLENBQ0E7O0FBQ0EsSUFBTUksU0FBUyxHQUFHO0FBRWhCQyxFQUFBQSxLQUFLLEVBQUU7QUFDTDtBQUNBTCxJQUFBQSxLQUFLLEVBQUUsaUJBQU07QUFDWCxhQUFPTSxNQUFNLENBQUNDLE1BQVAsQ0FBY1AsTUFBZCxDQUFQO0FBQ0QsS0FKSTtBQUtMO0FBQ0FHLElBQUFBLEVBQUUsRUFBRSxjQUFNO0FBQ1IsYUFBT0EsR0FBUDtBQUNELEtBUkk7QUFTTDtBQUNBSyxJQUFBQSxJQUFJLEVBQUUsY0FBQ0MsTUFBRCxRQUFrQjtBQUFBLFVBQVJSLEVBQVEsUUFBUkEsRUFBUTtBQUN0QixhQUFPRCxNQUFLLENBQUNDLEVBQUQsQ0FBWjtBQUNEO0FBWkk7QUFGUyxDQUFsQixDLENBaUJBOztBQUNBLElBQU1TLE1BQU0sR0FBRyxJQUFJQyxpQ0FBSixDQUFpQjtBQUM5QjtBQUNBQyxFQUFBQSxRQUFRLEVBQUVkLE1BRm9CO0FBRzlCTSxFQUFBQSxTQUFTLEVBQVRBO0FBSDhCLENBQWpCLENBQWYsQyxDQUtBO0FBQ0E7O0FBQ0FNLE1BQU0sQ0FBQ0csZUFBUCxDQUF1QjtBQUFFaEIsRUFBQUEsR0FBRyxFQUFIQSxHQUFGO0FBQU9pQixFQUFBQSxJQUFJLEVBQUU7QUFBYixDQUF2QixFLENBQ0E7O0FBQ0FqQixHQUFHLENBQUNrQixNQUFKLENBQVc7QUFBRUMsRUFBQUEsSUFBSSxFQUFFO0FBQVIsQ0FBWCxFQUEyQixZQUFNO0FBQy9CO0FBQ0ExQixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxnREFBWjtBQUNELENBSEQsRSxDQUlBOztBQUNBTSxHQUFHLENBQUNvQixHQUFKLENBQVEsdUJBQVIiLCJzb3VyY2VSb290IjoiL2hvbWUvcGFuZGFob21lL0JlY29kZS90ZXN0X3BfMS9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyIvL0NldHRlIGltcG9ydCBwZXJtZXQgZGUgbWFuaXB1bGVyIGRlcyBkb3NzaWVyIGRlcHVpcyBsZSAuZW52IGF2ZWMgbGUgZmljaGllciBqcyggVm9pciBDb21tZW50IDEpXG5pbXBvcnQgJ2RvdGVudi9jb25maWcnO1xuLy8gT24gaW1wb3J0ZSBsYSBmb25jdGlvbiBoaSBkZXB1aXMgbGUgZmljaGllciBwYWdlXzEgXG5pbXBvcnQgaGkgZnJvbSBcIi4vcGFnZV8xLmpzXCIgO1xuLy9FeHByZXNzIGVzdCB1biBmcmFtZXdvcmsgcXVpIHBlcm1ldCBkZSBnZXJlciBkZXMgc2VydmV1cnMuIE9uIGwndXRpbGlzZSBpY2kgYXZlYyBhcG9sbG8uIFxuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG4vL0Fwb2xsbyBzZXJ2ZXVyIGVzdCB1biBmcmFtZXdvcmsgcGVybWV0YW5udCBkZSBjcmVlciBldCBnZXJlciBkZXMgYmFzZXMgZGUgZG9ubsOpZSBhdmVjIGdyYXBocWxcbmltcG9ydCB7IEFwb2xsb1NlcnZlciwgZ3FsIH0gZnJvbSAnYXBvbGxvLXNlcnZlci1leHByZXNzJztcbi8vTm91cyBwZXJtZXQgZCdhY2NlcGV0ZXIgcGx1c2lldXIgZGVtYW5kZSBkZSBwbHVzaWV1ciBzb3VyY2VzLlxuaW1wb3J0IGNvcnMgZnJvbSAnY29ycyc7XG4vLzEgLiBPbiBhZmZjaWhlIGRhbnMgbGEgY29uc29sZSB1bmUgdmFsZXVyIHN0b2Nrw6llIGRhbnMgbGUgLmVudlxuY29uc29sZS5sb2cocHJvY2Vzcy5lbnYuTVlfU0VDUkVUKTtcbi8vIE9uIGFwcGVsbGUgbm90cmUgZm9uY3Rpb24gKFwiY29uY29sZSBsb2cgZGVwdWlzIGxlIGZpY2hpZXIgcGFnZSAxXCIpXG5sZXQgbXNnID0gcmVxdWlyZShcIi4vcGFnZV8xLmpzXCIpO1xuXG5cblxuLy8gT24gbGFuY2UgbGUgc2VydmV1ciBleHByZXNzIGVuIGwnaW5pdGFsaXNhbnQgZGFucyB1bmUgY29uc3RhbnRlXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG4vLyBPbiBjb25zdHJ1aXQgaWNpIGxlIHNjaGVtYSBkZSBub3RyZSBcImJhc2UgZGUgZG9ubsOpZVwiXG4vL0xlIHNjaGVtYSBlc3QgdW4gbGlzdGUgZGUgZGVmaW5pdGlvbnMgZGUgdHlwZS4gT24gY29tbWVuY2UgcGFyIGxlIHR5cGUgUXVlcnkgcHVpcyBvbiByZW1wbGlzIGxlcyBkaWZmZXJlbnQgY2hhbXAoVXNlcikgZGUgbGEgREJcbi8vZ3FswrQuLi5gIGVzdCBsZSBmb3JtYXQgR3JhcGhRbCBkZSBEQlxuLy9Qb3VyIGxlIHByZW1pZXIgXCJ1c2VycyA6IFtVc2VyIV1cIiBPbiBjcmVlIHVuIHR5cGUgdXNlcnMgcXVlIHRvdXMgbGVzIHVzZXJzIHBvc3NlZGUgcGFyIGRlZmF1dCBldCBxdWkgZXN0IG9ibGlnYXRvaXJlXG4vL1BvdXIgbGUgc2Vjb25kIFwibWUgOlVzZXJcIiBPbiBkZWZpbmlzIHVuIG9iamV0IG1lIGRlIHR5cGVyIFVzZXIuIERhbnMgY2UgY2EgaWwgYSBsZSBcInNjYWxhciB0eXBlKGNoYW1wIGNsYXNzaXF1ZSlcIiB1c2VybmFtZShzdHJpbmcpIGV0IGlkKElEKVxuLy8nIScgdmV1dCBkaXJlIHF1ZSBjZXMgY2hhbXBzIG5lIHBldXZlbnQgcGFzIGV0cmUgbnVsbCBcbmNvbnN0IHNjaGVtYSA9IGdxbGBcbiAgdHlwZSBRdWVyeSB7XG4gICAgdXNlcnM6IFtVc2VyIV1cbiAgICBtZTogVXNlclxuICAgIHVzZXIoaWQgOiBJRCEpIDogVXNlclxuICB9XG4gIHR5cGUgVXNlciB7XG4gICAgdXNlcm5hbWU6IFN0cmluZyFcbiAgICBpZCA6SUQhXG4gIH1cbmA7XG4vL0xlIHVzZXIgaW5kaXF1ZSBsZSBzcXVlbGxldHRlIGRlIG5vdHJlIERCLCBpY2kgb24gYSB0eXBlcyBxdWkgc29udCB1c2VybmFtZSBldCBJRFxubGV0IHVzZXJzID0ge1xuICAxOiB7XG4gICAgaWQ6ICcxJyxcbiAgICB1c2VybmFtZTogJ1JvYmluIFdpZXJ1Y2gnLFxuICB9LFxuICAyOiB7XG4gICAgaWQ6ICcyJyxcbiAgICB1c2VybmFtZTogJ0RhdmUgRGF2aWRzJyxcbiAgfSxcbn07XG4vLyBPbiBkZWZlbmlzIHVuZSB2YXJpYWJsZSBcIm1lXCIgcXVpIHByZW5kIGNvbW1lIGNoYW1wIGxlIHByZW1pZXIgdXNlciBjb21tZSBjaGFtcFxuY29uc3QgbWUgPSB1c2Vyc1sxXTtcbi8vIExlIHJlc29sdmVycyBwZXJtZXQgZCdhbGxlciBjaGVyY2hlciBsZXMgZG9ubsOpZSBkYW5zIGxhIERCIGMnZXN0IGljaSBxdWUgdG91cyBsZXMgcXVlcnkgZGV2cm9udCBldHJlIGVmZmVjdHXDqWVcbmNvbnN0IHJlc29sdmVycyA9IHtcblxuICBRdWVyeToge1xuICAgIC8vIE9uIHJlbnZvaWUgbCdlbnNlbWJsZSBkZXMgZG9ubsOpZSBkZSBsYSB0YWJsZSB1c2VycyBcbiAgICB1c2VyczogKCkgPT4ge1xuICAgICAgcmV0dXJuIE9iamVjdC52YWx1ZXModXNlcnMpO1xuICAgIH0sXG4gICAgLy8gT24gcmVudm9pZSB0b3V0ZXMgbGVzIGRvbsOpZXMgZGUgJ21lJyBcbiAgICBtZTogKCkgPT4ge1xuICAgICAgcmV0dXJuIG1lO1xuICAgIH0sXG4gICAgLy9PbiByZW52b2llIGxlcyBkb25uw6llIGQndW4gdXNlciBjaWJsw6kgZW4gZm9uY3Rpb24gZGUgc29uIElEXG4gICAgdXNlcjogKHBhcmVudCwge2lkfSkgPT4ge1xuICAgICAgcmV0dXJuIHVzZXJzW2lkXTtcbiAgICB9LFxuICB9LFxufTtcbi8vT24gbGFuY2UgbGUgc2VydmV1ciBBcG9sbG9cbmNvbnN0IHNlcnZlciA9IG5ldyBBcG9sbG9TZXJ2ZXIoe1xuICAvLyBEZWZpbml0aW9ucyBkZXMgdHlwZXMgLT4gc2NoZW1hIGV0IHJlcXVldGUgZmFpdGUgYXZlYyByZXNvbHZlcnNcbiAgdHlwZURlZnM6IHNjaGVtYSxcbiAgcmVzb2x2ZXJzLFxufSk7XG4vL09uIHV0aWxpc2UgaWNpICdhcHBseU1pZGRsZXdhcmUnIHBvdXIgbGFuY2VyIGV4cHJlc3MgYXZlYyBsZSBzZXJ2ZXVyIGFwcG9sbG8gcG91ciBsYW5jZXIgR3JhcGhxbCBwbGF5Z3JvdW5kXG4vL09uIGxhbmNlIGRhbnMgbGUgbmF2aWdhdGV1ciBsb2NhbGhvc3Q6ODAwMC9ncmFwaHFsIHBvdXIgYWNjZWRlciBhIGxhIHBhZ2UgZGUgZ3JhcGhxbCBwbGF5Z3JvdW5kXG5zZXJ2ZXIuYXBwbHlNaWRkbGV3YXJlKHsgYXBwLCBwYXRoOiAnL2dyYXBocWwnIH0pO1xuLy9PbiBsYW5jZSBub3RyZSBwYWdlIHN1ciBsZSBwb3J0IDgwMDBcbmFwcC5saXN0ZW4oeyBwb3J0OiA4MDAwIH0sICgpID0+IHtcbiAgLy9NZXNzYWdlIGQnYWZmaWNoYWdlIGxvcnNxdWUgbGUgc2VydmV1ciBlc3QgZW4gbGlnbmVcbiAgY29uc29sZS5sb2coJ0Fwb2xsbyBTZXJ2ZXIgb24gaHR0cDovL2xvY2FsaG9zdDo4MDAwL2dyYXBocWwnKTtcbn0pO1xuLy9MYW5jZW1lbnQgZGUgY29yc1xuYXBwLnVzZShjb3JzKCkpO1xuXG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "console",
        "log",
        "process",
        "env",
        "MY_SECRET",
        "msg",
        "require",
        "app",
        "schema",
        "gql",
        "users",
        "id",
        "username",
        "me",
        "resolvers",
        "Query",
        "Object",
        "values",
        "user",
        "parent",
        "server",
        "ApolloServer",
        "typeDefs",
        "applyMiddleware",
        "path",
        "listen",
        "port",
        "use"
      ],
      "mappings": ";;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;;;;;;;;;;;;;;;AACA;AACAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,SAAxB,E,CACA;;AACA,IAAIC,GAAG,GAAGC,OAAO,CAAC,aAAD,CAAjB,C,CAIA;;;AACA,IAAMC,GAAG,GAAG,0BAAZ,C,CACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,MAAM,OAAGC,wBAAH,oBAAZ,C,CAWA;;AACA,IAAIC,MAAK,GAAG;AACV,KAAG;AACDC,IAAAA,EAAE,EAAE,GADH;AAEDC,IAAAA,QAAQ,EAAE;AAFT,GADO;AAKV,KAAG;AACDD,IAAAA,EAAE,EAAE,GADH;AAEDC,IAAAA,QAAQ,EAAE;AAFT;AALO,CAAZ,C,CAUA;;AACA,IAAMC,GAAE,GAAGH,MAAK,CAAC,CAAD,CAAhB,C,CACA;;AACA,IAAMI,SAAS,GAAG;AAEhBC,EAAAA,KAAK,EAAE;AACL;AACAL,IAAAA,KAAK,EAAE,iBAAM;AACX,aAAOM,MAAM,CAACC,MAAP,CAAcP,MAAd,CAAP;AACD,KAJI;AAKL;AACAG,IAAAA,EAAE,EAAE,cAAM;AACR,aAAOA,GAAP;AACD,KARI;AASL;AACAK,IAAAA,IAAI,EAAE,cAACC,MAAD,QAAkB;AAAA,UAARR,EAAQ,QAARA,EAAQ;AACtB,aAAOD,MAAK,CAACC,EAAD,CAAZ;AACD;AAZI;AAFS,CAAlB,C,CAiBA;;AACA,IAAMS,MAAM,GAAG,IAAIC,iCAAJ,CAAiB;AAC9B;AACAC,EAAAA,QAAQ,EAAEd,MAFoB;AAG9BM,EAAAA,SAAS,EAATA;AAH8B,CAAjB,CAAf,C,CAKA;AACA;;AACAM,MAAM,CAACG,eAAP,CAAuB;AAAEhB,EAAAA,GAAG,EAAHA,GAAF;AAAOiB,EAAAA,IAAI,EAAE;AAAb,CAAvB,E,CACA;;AACAjB,GAAG,CAACkB,MAAJ,CAAW;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAX,EAA2B,YAAM;AAC/B;AACA1B,EAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AACD,CAHD,E,CAIA;;AACAM,GAAG,CAACoB,GAAJ,CAAQ,uBAAR",
      "sourceRoot": "/home/pandahome/Becode/test_p_1/src",
      "sourcesContent": [
        "//Cette import permet de manipuler des dossier depuis le .env avec le fichier js( Voir Comment 1)\nimport 'dotenv/config';\n// On importe la fonction hi depuis le fichier page_1 \nimport hi from \"./page_1.js\" ;\n//Express est un framework qui permet de gerer des serveurs. On l'utilise ici avec apollo. \nimport express from 'express';\n//Apollo serveur est un framework permetannt de creer et gerer des bases de donnée avec graphql\nimport { ApolloServer, gql } from 'apollo-server-express';\n//Nous permet d'accepeter plusieur demande de plusieur sources.\nimport cors from 'cors';\n//1 . On affcihe dans la console une valeur stockée dans le .env\nconsole.log(process.env.MY_SECRET);\n// On appelle notre fonction (\"concole log depuis le fichier page 1\")\nlet msg = require(\"./page_1.js\");\n\n\n\n// On lance le serveur express en l'initalisant dans une constante\nconst app = express();\n// On construit ici le schema de notre \"base de donnée\"\n//Le schema est un liste de definitions de type. On commence par le type Query puis on remplis les different champ(User) de la DB\n//gql´...` est le format GraphQl de DB\n//Pour le premier \"users : [User!]\" On cree un type users que tous les users possede par defaut et qui est obligatoire\n//Pour le second \"me :User\" On definis un objet me de typer User. Dans ce ca il a le \"scalar type(champ classique)\" username(string) et id(ID)\n//'!' veut dire que ces champs ne peuvent pas etre null \nconst schema = gql`\n  type Query {\n    users: [User!]\n    me: User\n    user(id : ID!) : User\n  }\n  type User {\n    username: String!\n    id :ID!\n  }\n`;\n//Le user indique le squellette de notre DB, ici on a types qui sont username et ID\nlet users = {\n  1: {\n    id: '1',\n    username: 'Robin Wieruch',\n  },\n  2: {\n    id: '2',\n    username: 'Dave Davids',\n  },\n};\n// On defenis une variable \"me\" qui prend comme champ le premier user comme champ\nconst me = users[1];\n// Le resolvers permet d'aller chercher les donnée dans la DB c'est ici que tous les query devront etre effectuée\nconst resolvers = {\n\n  Query: {\n    // On renvoie l'ensemble des donnée de la table users \n    users: () => {\n      return Object.values(users);\n    },\n    // On renvoie toutes les donées de 'me' \n    me: () => {\n      return me;\n    },\n    //On renvoie les donnée d'un user ciblé en fonction de son ID\n    user: (parent, {id}) => {\n      return users[id];\n    },\n  },\n};\n//On lance le serveur Apollo\nconst server = new ApolloServer({\n  // Definitions des types -> schema et requete faite avec resolvers\n  typeDefs: schema,\n  resolvers,\n});\n//On utilise ici 'applyMiddleware' pour lancer express avec le serveur appollo pour lancer Graphql playground\n//On lance dans le navigateur localhost:8000/graphql pour acceder a la page de graphql playground\nserver.applyMiddleware({ app, path: '/graphql' });\n//On lance notre page sur le port 8000\napp.listen({ port: 8000 }, () => {\n  //Message d'affichage lorsque le serveur est en ligne\n  console.log('Apollo Server on http://localhost:8000/graphql');\n});\n//Lancement de cors\napp.use(cors());\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1577569086430
  },
  "{\"sourceRoot\":\"/home/pandahome/Becode/test_p_1/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/pandahome/Becode/test_p_1\",\"filename\":\"/home/pandahome/Becode/test_p_1/src/page_1.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/pandahome/Becode/test_p_1\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/pandahome/Becode/test_p_1/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/pandahome/Becode/test_p_1",
      "filename": "/home/pandahome/Becode/test_p_1/src/page_1.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/pandahome/Becode/test_p_1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/pandahome/Becode/test_p_1/src/page_1.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/pandahome/Becode/test_p_1/src/page_1.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/pandahome/Becode/test_p_1/src",
        "sourceFileName": "page_1.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar hi = function hi() {\n  console.log(\"Hey je suis de la page 1\");\n};\n\nmodule[\"export\"] = hi();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhZ2VfMS5qcyJdLCJuYW1lcyI6WyJoaSIsImNvbnNvbGUiLCJsb2ciLCJtb2R1bGUiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsRUFBRSxHQUFHLFNBQUxBLEVBQUssR0FBVTtBQUNqQkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMEJBQVo7QUFDSCxDQUZEOztBQUdBQyxNQUFNLFVBQU4sR0FBZ0JILEVBQUUsRUFBbEIiLCJzb3VyY2VSb290IjoiL2hvbWUvcGFuZGFob21lL0JlY29kZS90ZXN0X3BfMS9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBoaSA9IGZ1bmN0aW9uKCl7XG4gICAgY29uc29sZS5sb2coXCJIZXkgamUgc3VpcyBkZSBsYSBwYWdlIDFcIik7XG59XG5tb2R1bGUuZXhwb3J0ID0gaGkoKSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "page_1.js"
      ],
      "names": [
        "hi",
        "console",
        "log",
        "module"
      ],
      "mappings": ";;AAAA,IAAMA,EAAE,GAAG,SAALA,EAAK,GAAU;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACH,CAFD;;AAGAC,MAAM,UAAN,GAAgBH,EAAE,EAAlB",
      "sourceRoot": "/home/pandahome/Becode/test_p_1/src",
      "sourcesContent": [
        "const hi = function(){\n    console.log(\"Hey je suis de la page 1\");\n}\nmodule.export = hi()"
      ]
    },
    "sourceType": "script",
    "mtime": 1577551098950
  }
}
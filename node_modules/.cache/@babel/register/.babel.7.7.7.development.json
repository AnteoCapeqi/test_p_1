{
  "{\"sourceRoot\":\"/home/pandahome/Becode/test_p_1/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/pandahome/Becode/test_p_1\",\"filename\":\"/home/pandahome/Becode/test_p_1/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/pandahome/Becode/test_p_1\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/pandahome/Becode/test_p_1/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/pandahome/Becode/test_p_1",
      "filename": "/home/pandahome/Becode/test_p_1/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/pandahome/Becode/test_p_1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/pandahome/Becode/test_p_1/src/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/pandahome/Becode/test_p_1/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/pandahome/Becode/test_p_1/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire(\"dotenv/config\");\n\nvar _page_ = _interopRequireDefault(require(\"./page_1.js\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _v = _interopRequireDefault(require(\"uuid/v4\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  type Query {\\n    me: User\\n\\n    users: [User!]\\n    user(id : ID!) : User\\n\\n    messages: [Message!]!\\n    message(id: ID!): Message!\\n  }\\n  type User {\\n    username: String!\\n    id :ID!\\n    messages: [Message!]\\n  }\\n  type Message{\\n    id: ID!\\n    text: String!\\n    user: User!\\n  }\\n  type Mutation {\\n    createMessage(text: String!): Message!\\n    deleteMessage(id: ID!): Boolean!\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\n//1 . On affcihe dans la console une valeur stockée dans le .env\nconsole.log(process.env.MY_SECRET); // On appelle notre fonction (\"concole log depuis le fichier page 1\")\n\nvar msg = require(\"./page_1.js\"); // Ce framework permet de donner un id unique a chaque fois qu'il est call\n\n\n// On lance le serveur express en l'initalisant dans une constante\nvar app = (0, _express[\"default\"])(); // On construit ici le schema de notre \"base de donnée\"\n//Le schema est un liste de definitions de type. On commence par le type Query puis on remplis les differents champs(User,Message) de la DB\n//gql´...` est le format GraphQl de la DB\n//Pour le premier \"users : [User!]\" On cree un type users que tous les users possede par defaut et qui est obligatoire\n//Pour le second \"me :User\" On definis un objet me de typer User. Dans ce ca il a le \"scalar type(champ classique)\" username(string) et id(ID)\n//'!' veut dire que ces champs ne peuvent pas etre null \n// Message \n\nvar schema = (0, _apolloServerExpress.gql)(_templateObject()); //User est une table qui est composée des champ Id et usernam\n\nvar _users = {\n  1: {\n    id: '1',\n    username: 'Robin Wieruch',\n    messageIds: [1]\n  },\n  2: {\n    id: '2',\n    username: 'Dave Davids',\n    messageIds: [2]\n  }\n}; //message est une table qui est composée des champ Id et usernam\n\nvar _messages = {\n  1: {\n    id: '1',\n    text: 'Hello World',\n    userId: '1'\n  },\n  2: {\n    id: '2',\n    text: 'By World',\n    userId: '2'\n  }\n}; // On defenis une variable \"me\" qui prend comme champ le premier user comme champ\n//const me = users[1]; Plus besoin de l'utiliser car il est init dans l'argument contexte(3eme argument) de Apollo serveur \n// Le resolvers permet d'aller chercher les donnée dans la DB c'est ici que tous les query devront etre effectuée\n\nvar resolvers = {\n  Query: {\n    // On renvoie l'ensemble des donnée de la table users \n    users: function users() {\n      return Object.values(_users);\n    },\n    // On renvoie toutes les données de 'me'\n    // Le 3 eme 'me' argument viens de context.\n    me: function me(parent, args, _ref) {\n      var _me = _ref.me;\n      return _me;\n    },\n    //On renvoie les donnée d'un user ciblé en fonction de son ID\n    user: function user(parent, _ref2) {\n      var id = _ref2.id;\n      return _users[id];\n    },\n    //On renvoie l'ensemble des donnée de la table message\n    messages: function messages() {\n      return Object.values(_messages);\n    },\n    //On renvoie les donnée d'un message ciblé en fonction de son ID\n    message: function message(parent, _ref3) {\n      var id = _ref3.id;\n      return _messages[id];\n    }\n  },\n  User: {\n    messages: function messages(user) {\n      return Object.values(_messages).filter(function (message) {\n        return message.userID === user.id;\n      });\n    }\n  },\n  Message: {\n    user: function user(message) {\n      return _users[message.userId];\n    }\n  },\n  Mutation: {\n    createMessage: function createMessage(parent, _ref4, _ref5) {\n      var text = _ref4.text;\n      var me = _ref5.me;\n      var id = (0, _v[\"default\"])();\n      var message = {\n        id: id,\n        text: text,\n        userId: me.id\n      };\n      _messages[id] = message;\n\n      _users[me.id].messageIds.push(id);\n\n      return message;\n    },\n    deleteMessage: function deleteMessage(parent, _ref6) {\n      var id = _ref6.id;\n\n      var _messages2 = _messages,\n          message = _messages2[id],\n          otherMessages = _objectWithoutProperties(_messages2, [id].map(_toPropertyKey));\n\n      if (!message) {\n        return false;\n      }\n\n      _messages = otherMessages;\n      return true;\n    }\n  } // Ici on impose a tous les usernames la valeur 'Hans'\n  // User: {\n  //     username: () => 'Hans',\n  // },\n  //Ici on renvoie le parent de username lorsque l'on demande le username(redondant)\n  // User: {\n  //   username: parent => {\n  //     return parent.username;\n  //   }\n  // }\n  //On definis ici a username un nom et prenom\n  // User: {\n  //   username: user => `${user.firstname} ${user.lastname}`,\n  // },\n\n}; //On lance le serveur Apollo\n\nvar server = new _apolloServerExpress.ApolloServer({\n  // Definitions des types -> schema et requete faite avec resolvers\n  typeDefs: schema,\n  resolvers: resolvers,\n  context: {\n    me: _users[1]\n  }\n}); //On utilise ici 'applyMiddleware' pour lancer express avec le serveur appollo pour lancer Graphql playground\n//On lance dans le navigateur localhost:8000/graphql pour acceder a la page de graphql playground\n\nserver.applyMiddleware({\n  app: app,\n  path: '/graphql'\n}); //On lance notre page sur le port 8000\n\napp.listen({\n  port: 8000\n}, function () {\n  //Message d'affichage lorsque le serveur est en ligne\n  console.log('Apollo Server on http://localhost:8000/graphql');\n}); //Lancement de cors\n\napp.use((0, _cors[\"default\"])());\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvbnNvbGUiLCJsb2ciLCJwcm9jZXNzIiwiZW52IiwiTVlfU0VDUkVUIiwibXNnIiwicmVxdWlyZSIsImFwcCIsInNjaGVtYSIsImdxbCIsInVzZXJzIiwiaWQiLCJ1c2VybmFtZSIsIm1lc3NhZ2VJZHMiLCJtZXNzYWdlcyIsInRleHQiLCJ1c2VySWQiLCJyZXNvbHZlcnMiLCJRdWVyeSIsIk9iamVjdCIsInZhbHVlcyIsIm1lIiwicGFyZW50IiwiYXJncyIsInVzZXIiLCJtZXNzYWdlIiwiVXNlciIsImZpbHRlciIsInVzZXJJRCIsIk1lc3NhZ2UiLCJNdXRhdGlvbiIsImNyZWF0ZU1lc3NhZ2UiLCJwdXNoIiwiZGVsZXRlTWVzc2FnZSIsIm90aGVyTWVzc2FnZXMiLCJzZXJ2ZXIiLCJBcG9sbG9TZXJ2ZXIiLCJ0eXBlRGVmcyIsImNvbnRleHQiLCJhcHBseU1pZGRsZXdhcmUiLCJwYXRoIiwibGlzdGVuIiwicG9ydCIsInVzZSJdLCJtYXBwaW5ncyI6Ijs7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFNQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFMQTtBQUNBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFNBQXhCLEUsQ0FDQTs7QUFDQSxJQUFJQyxHQUFHLEdBQUdDLE9BQU8sQ0FBQyxhQUFELENBQWpCLEMsQ0FDQTs7O0FBS0E7QUFDQSxJQUFNQyxHQUFHLEdBQUcsMEJBQVosQyxDQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBLElBQU1DLE1BQU0sT0FBR0Msd0JBQUgsb0JBQVosQyxDQXlCQTs7QUFDQSxJQUFJQyxNQUFLLEdBQUc7QUFDVixLQUFHO0FBQ0RDLElBQUFBLEVBQUUsRUFBRSxHQURIO0FBRURDLElBQUFBLFFBQVEsRUFBRSxlQUZUO0FBR0RDLElBQUFBLFVBQVUsRUFBRSxDQUFDLENBQUQ7QUFIWCxHQURPO0FBTVYs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QSxVQUNMdUIsYUFESyx5Q0FDdkJ2QixFQUR1Qjs7QUFHL0IsVUFBRyxDQUFDYyxPQUFKLEVBQWE7QUFDWCxlQUFPLEtBQVA7QUFDRDs7QUFDRFgsTUFBQUEsU0FBUSxHQUFHb0IsYUFBWDtBQUNBLGFBQU8sSUFBUDtBQUNEO0FBcEJRLEdBOUNLLENBc0VoQjtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQXJGZ0IsQ0FBbEIsQyxDQXlGQTs7QUFDQSxJQUFNQyxNQUFNLEdBQUcsSUFBSUMsaUNBQUosQ0FBaUI7QUFDOUI7QUFDQUMsRUFBQUEsUUFBUSxFQUFFN0IsTUFGb0I7QUFHOUJTLEVBQUFBLFNBQVMsRUFBVEEsU0FIOEI7QUFJOUJxQixFQUFBQSxPQUFPLEVBQUU7QUFDUGpCLElBQUFBLEVBQUUsRUFBRVgsTUFBSyxDQUFDLENBQUQ7QUFERjtBQUpxQixDQUFqQixDQUFmLEMsQ0FVQTtBQUNBOztBQUNBeUIsTUFBTSxDQUFDSSxlQUFQLENBQXVCO0FBQUVoQyxFQUFBQSxHQUFHLEVBQUhBLEdBQUY7QUFBT2lDLEVBQUFBLElBQUksRUFBRTtBQUFiLENBQXZCLEUsQ0FDQTs7QUFDQWpDLEdBQUcsQ0FBQ2tDLE1BQUosQ0FBVztBQUFFQyxFQUFBQSxJQUFJLEVBQUU7QUFBUixDQUFYLEVBQTJCLFlBQU07QUFDL0I7QUFDQTFDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdEQUFaO0FBQ0QsQ0FIRCxFLENBSUE7O0FBQ0FNLEdBQUcsQ0FBQ29DLEdBQUosQ0FBUSx1QkFBUiIsInNvdXJjZVJvb3QiOiIvaG9tZS9wYW5kYWhvbWUvQmVjb2RlL3Rlc3RfcF8xL3NyYyIsInNvdXJjZXNDb250ZW50IjpbIi8vQ2V0dGUgaW1wb3J0IHBlcm1ldCBkZSBtYW5pcHVsZXIgZGVzIGRvc3NpZXIgZGVwdWlzIGxlIC5lbnYgYXZlYyBsZSBmaWNoaWVyIGpzKCBWb2lyIENvbW1lbnQgMSlcbmltcG9ydCAnZG90ZW52L2NvbmZpZyc7XG4vLyBPbiBpbXBvcnRlIGxhIGZvbmN0aW9uIGhpIGRlcHVpcyBsZSBmaWNoaWVyIHBhZ2VfMSBcbmltcG9ydCBoaSBmcm9tIFwiLi9wYWdlXzEuanNcIiA7XG4vL0V4cHJlc3MgZXN0IHVuIGZyYW1ld29yayBxdWkgcGVybWV0IGRlIGdlcmVyIGRlcyBzZXJ2ZXVycy4gT24gbCd1dGlsaXNlIGljaSBhdmVjIGFwb2xsby4gXG5pbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbi8vQXBvbGxvIHNlcnZldXIgZXN0IHVuIGZyYW1ld29yayBwZXJtZXRhbm50IGRlIGNyZWVyIGV0IGdlcmVyIGRlcyBiYXNlcyBkZSBkb25uw6llIGF2ZWMgZ3JhcGhxbFxuaW1wb3J0IHsgQXBvbGxvU2VydmVyLCBncWwgfSBmcm9tICdhcG9sbG8tc2VydmVyLWV4cHJlc3MnO1xuLy9Ob3VzIHBlcm1ldCBkJ2FjY2VwZXRlciBwbHVzaWV1ciBkZW1hbmRlIGRlIHBsdXNpZXVyIHNvdXJjZXMuXG5pbXBvcnQgY29ycyBmcm9tICdjb3JzJztcbi8vMSAuIE9uIGFmZmNpaGUgZGFucyBsYSBjb25zb2xlIHVuZSB2YWxldXIgc3RvY2vDqWUgZGFucyBsZSAuZW52XG5jb25zb2xlLmxvZyhwcm9jZXNzLmVudi5NWV9TRUNSRVQpO1xuLy8gT24gYXBwZWxsZSBub3RyZSBmb25jdGlvbiAoXCJjb25jb2xlIGxvZyBkZXB1aXMgbGUgZmljaGllciBwYWdlIDFcIilcbmxldCBtc2cgPSByZXF1aXJlKFwiLi9wYWdlXzEuanNcIik7XG4vLyBDZSBmcmFtZXdvcmsgcGVybWV0IGRlIGRvbm5lciB1biBpZCB1bmlxdWUgYSBjaGFxdWUgZm9pcyBxdSdpbCBlc3QgY2FsbFxuaW1wb3J0IHV1aWR2NCBmcm9tICd1dWlkL3Y0JztcblxuXG5cbi8vIE9uIGxhbmNlIGxlIHNlcnZldXIgZXhwcmVzcyBlbiBsJ2luaXRhbGlzYW50IGRhbnMgdW5lIGNvbnN0YW50ZVxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuLy8gT24gY29uc3RydWl0IGljaSBsZSBzY2hlbWEgZGUgbm90cmUgXCJiYXNlIGRlIGRvbm7DqWVcIlxuLy9MZSBzY2hlbWEgZXN0IHVuIGxpc3RlIGRlIGRlZmluaXRpb25zIGRlIHR5cGUuIE9uIGNvbW1lbmNlIHBhciBsZSB0eXBlIFF1ZXJ5IHB1aXMgb24gcmVtcGxpcyBsZXMgZGlmZmVyZW50cyBjaGFtcHMoVXNlcixNZXNzYWdlKSBkZSBsYSBEQlxuLy9ncWzCtC4uLmAgZXN0IGxlIGZvcm1hdCBHcmFwaFFsIGRlIGxhIERCXG4vL1BvdXIgbGUgcHJlbWllciBcInVzZXJzIDogW1VzZXIhXVwiIE9uIGNyZWUgdW4gdHlwZSB1c2VycyBxdWUgdG91cyBsZXMgdXNlcnMgcG9zc2VkZSBwYXIgZGVmYXV0IGV0IHF1aSBlc3Qgb2JsaWdhdG9pcmVcbi8vUG91ciBsZSBzZWNvbmQgXCJtZSA6VXNlclwiIE9uIGRlZmluaXMgdW4gb2JqZXQgbWUgZGUgdHlwZXIgVXNlci4gRGFucyBjZSBjYSBpbCBhIGxlIFwic2NhbGFyIHR5cGUoY2hhbXAgY2xhc3NpcXVlKVwiIHVzZXJuYW1lKHN0cmluZykgZXQgaWQoSUQpXG4vLychJyB2ZXV0IGRpcmUgcXVlIGNlcyBjaGFtcHMgbmUgcGV1dmVudCBwYXMgZXRyZSBudWxsIFxuLy8gTWVzc2FnZSBcbmNvbnN0IHNjaGVtYSA9IGdxbGBcbiAgdHlwZSBRdWVyeSB7XG4gICAgbWU6IFVzZXJcblxuICAgIHVzZXJzOiBbVXNlciFdXG4gICAgdXNlcihpZCA6IElEISkgOiBVc2VyXG5cbiAgICBtZXNzYWdlczogW01lc3NhZ2UhXSFcbiAgICBtZXNzYWdlKGlkOiBJRCEpOiBNZXNzYWdlIVxuICB9XG4gIHR5cGUgVXNlciB7XG4gICAgdXNlcm5hbWU6IFN0cmluZyFcbiAgICBpZCA6SUQhXG4gICAgbWVzc2FnZXM6IFtNZXNzYWdlIV1cbiAgfVxuICB0eXBlIE1lc3NhZ2V7XG4gICAgaWQ6IElEIVxuICAgIHRleHQ6IFN0cmluZyFcbiAgICB1c2VyOiBVc2VyIVxuICB9XG4gIHR5cGUgTXV0YXRpb24ge1xuICAgIGNyZWF0ZU1lc3NhZ2UodGV4dDogU3RyaW5nISk6IE1lc3NhZ2UhXG4gICAgZGVsZXRlTWVzc2FnZShpZDogSUQhKTogQm9vbGVhbiFcbiAgfVxuYDtcbi8vVXNlciBlc3QgdW5lIHRhYmxlIHF1aSBlc3QgY29tcG9zw6llIGRlcyBjaGFtcCBJZCBldCB1c2VybmFtXG5sZXQgdXNlcnMgPSB7XG4gIDE6IHtcbiAgICBpZDogJzEnLFxuICAgIHVzZXJuYW1lOiAnUm9iaW4gV2llcnVjaCcsXG4gICAgbWVzc2FnZUlkcyA6WzFdLFxuICB9LFxuICAyOiB7XG4gICAgaWQ6ICcyJyxcbiAgICB1c2VybmFtZTogJ0RhdmUgRGF2aWRzJyxcbiAgICBtZXNzYWdlSWRzIDpbMl0sXG4gIH0sXG59O1xuLy9tZXNzYWdlIGVzdCB1bmUgdGFibGUgcXVpIGVzdCBjb21wb3PDqWUgZGVzIGNoYW1wIElkIGV0IHVzZXJuYW1cbmxldCBtZXNzYWdlcyA9IHtcbiAgMToge1xuICAgIGlkOiAnMScsXG4gICAgdGV4dDogJ0hlbGxvIFdvcmxkJyxcbiAgICB1c2VySWQgOiAnMScsXG4gIH0sXG4gIDI6IHtcbiAgICBpZDogJzInLFxuICAgIHRleHQ6ICdCeSBXb3JsZCcsXG4gICAgdXNlcklkIDogJzInLFxuICB9LFxufTtcbi8vIE9uIGRlZmVuaXMgdW5lIHZhcmlhYmxlIFwibWVcIiBxdWkgcHJlbmQgY29tbWUgY2hhbXAgbGUgcHJlbWllciB1c2VyIGNvbW1lIGNoYW1wXG4vL2NvbnN0IG1lID0gdXNlcnNbMV07IFBsdXMgYmVzb2luIGRlIGwndXRpbGlzZXIgY2FyIGlsIGVzdCBpbml0IGRhbnMgbCdhcmd1bWVudCBjb250ZXh0ZSgzZW1lIGFyZ3VtZW50KSBkZSBBcG9sbG8gc2VydmV1ciBcbi8vIExlIHJlc29sdmVycyBwZXJtZXQgZCdhbGxlciBjaGVyY2hlciBsZXMgZG9ubsOpZSBkYW5zIGxhIERCIGMnZXN0IGljaSBxdWUgdG91cyBsZXMgcXVlcnkgZGV2cm9udCBldHJlIGVmZmVjdHXDqWVcbmNvbnN0IHJlc29sdmVycyA9IHtcblxuICBRdWVyeToge1xuXG4gICAgLy8gT24gcmVudm9pZSBsJ2Vuc2VtYmxlIGRlcyBkb25uw6llIGRlIGxhIHRhYmxlIHVzZXJzIFxuICAgIHVzZXJzOiAoKSA9PiB7XG4gICAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyh1c2Vycyk7XG4gICAgfSxcblxuICAgIC8vIE9uIHJlbnZvaWUgdG91dGVzIGxlcyBkb25uw6llcyBkZSAnbWUnXG4gICAgLy8gTGUgMyBlbWUgJ21lJyBhcmd1bWVudCB2aWVucyBkZSBjb250ZXh0LlxuICAgIG1lOiAocGFyZW50LCBhcmdzLCB7IG1lIH0pID0+IHtcbiAgICAgIHJldHVybiBtZTtcbiAgICB9LFxuXG4gICAgLy9PbiByZW52b2llIGxlcyBkb25uw6llIGQndW4gdXNlciBjaWJsw6kgZW4gZm9uY3Rpb24gZGUgc29uIElEXG4gICAgdXNlcjogKHBhcmVudCwge2lkfSkgPT4ge1xuICAgICAgcmV0dXJuIHVzZXJzW2lkXTtcbiAgICB9LFxuXG4gICAgLy9PbiByZW52b2llIGwnZW5zZW1ibGUgZGVzIGRvbm7DqWUgZGUgbGEgdGFibGUgbWVzc2FnZVxuICAgIG1lc3NhZ2VzOiAoKSA9PiB7XG4gICAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyhtZXNzYWdlcyk7XG4gICAgfSxcblxuICAgIC8vT24gcmVudm9pZSBsZXMgZG9ubsOpZSBkJ3VuIG1lc3NhZ2UgY2libMOpIGVuIGZvbmN0aW9uIGRlIHNvbiBJRFxuICAgIG1lc3NhZ2U6IChwYXJlbnQsIHsgaWQgfSkgPT4ge1xuICAgICAgcmV0dXJuIG1lc3NhZ2VzW2lkXTtcbiAgICB9LCBcbiAgfSxcbiAgXG4gIFVzZXIgOiB7XG4gICAgbWVzc2FnZXM6dXNlciA9PiB7XG4gICAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyhtZXNzYWdlcykuZmlsdGVyKFxuICAgICAgICBtZXNzYWdlID0+IG1lc3NhZ2UudXNlcklEID09PSB1c2VyLmlkXG4gICAgICApXG4gICAgfSxcbiAgfSxcblxuXG4gIE1lc3NhZ2U6IHtcbiAgICB1c2VyOiBtZXNzYWdlID0+IHtcbiAgICAgIHJldHVybiB1c2Vyc1ttZXNzYWdlLnVzZXJJZF1cbiAgICB9LFxuICB9LFxuXG4gIE11dGF0aW9uIDoge1xuICAgIGNyZWF0ZU1lc3NhZ2U6IChwYXJlbnQsIHt0ZXh0fSAsIHttZX0pID0+IHtcbiAgICAgIGNvbnN0IGlkID0gdXVpZHY0KCk7XG4gICAgICBjb25zdCBtZXNzYWdlID0ge1xuICAgICAgICBpZCxcbiAgICAgICAgdGV4dCxcbiAgICAgICAgdXNlcklkIDogbWUuaWQsXG4gICAgICB9O1xuICAgICAgbWVzc2FnZXNbaWRdID0gbWVzc2FnZTtcbiAgICAgIHVzZXJzW21lLmlkXS5tZXNzYWdlSWRzLnB1c2goaWQpO1xuICAgICAgcmV0dXJuIG1lc3NhZ2VcbiAgICB9LFxuICAgIGRlbGV0ZU1lc3NhZ2U6KHBhcmVudCwgeyBpZCB9KSA9PntcbiAgICAgIGNvbnN0e1sgaWQgXTogbWVzc2FnZSwgLi4ub3RoZXJNZXNzYWdlcyB9PSBtZXNzYWdlcztcblxuICAgICAgaWYoIW1lc3NhZ2UpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICB9XG4gICAgICBtZXNzYWdlcyA9IG90aGVyTWVzc2FnZXM7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH0sXG4gIFxuXG4gIC8vIEljaSBvbiBpbXBvc2UgYSB0b3VzIGxlcyB1c2VybmFtZXMgbGEgdmFsZXVyICdIYW5zJ1xuICAvLyBVc2VyOiB7XG4gIC8vICAgICB1c2VybmFtZTogKCkgPT4gJ0hhbnMnLFxuICAvLyB9LFxuXG4gIC8vSWNpIG9uIHJlbnZvaWUgbGUgcGFyZW50IGRlIHVzZXJuYW1lIGxvcnNxdWUgbCdvbiBkZW1hbmRlIGxlIHVzZXJuYW1lKHJlZG9uZGFudClcbiAgLy8gVXNlcjoge1xuICAvLyAgIHVzZXJuYW1lOiBwYXJlbnQgPT4ge1xuICAvLyAgICAgcmV0dXJuIHBhcmVudC51c2VybmFtZTtcbiAgLy8gICB9XG4gIC8vIH1cblxuICAvL09uIGRlZmluaXMgaWNpIGEgdXNlcm5hbWUgdW4gbm9tIGV0IHByZW5vbVxuICAvLyBVc2VyOiB7XG4gIC8vICAgdXNlcm5hbWU6IHVzZXIgPT4gYCR7dXNlci5maXJzdG5hbWV9ICR7dXNlci5sYXN0bmFtZX1gLFxuICAvLyB9LFxuXG59O1xuXG4vL09uIGxhbmNlIGxlIHNlcnZldXIgQXBvbGxvXG5jb25zdCBzZXJ2ZXIgPSBuZXcgQXBvbGxvU2VydmVyKHtcbiAgLy8gRGVmaW5pdGlvbnMgZGVzIHR5cGVzIC0+IHNjaGVtYSBldCByZXF1ZXRlIGZhaXRlIGF2ZWMgcmVzb2x2ZXJzXG4gIHR5cGVEZWZzOiBzY2hlbWEsXG4gIHJlc29sdmVycyxcbiAgY29udGV4dDoge1xuICAgIG1lOiB1c2Vyc1sxXSxcbiAgfSxcbn0pO1xuXG5cbi8vT24gdXRpbGlzZSBpY2kgJ2FwcGx5TWlkZGxld2FyZScgcG91ciBsYW5jZXIgZXhwcmVzcyBhdmVjIGxlIHNlcnZldXIgYXBwb2xsbyBwb3VyIGxhbmNlciBHcmFwaHFsIHBsYXlncm91bmRcbi8vT24gbGFuY2UgZGFucyBsZSBuYXZpZ2F0ZXVyIGxvY2FsaG9zdDo4MDAwL2dyYXBocWwgcG91ciBhY2NlZGVyIGEgbGEgcGFnZSBkZSBncmFwaHFsIHBsYXlncm91bmRcbnNlcnZlci5hcHBseU1pZGRsZXdhcmUoeyBhcHAsIHBhdGg6ICcvZ3JhcGhxbCcgfSk7XG4vL09uIGxhbmNlIG5vdHJlIHBhZ2Ugc3VyIGxlIHBvcnQgODAwMFxuYXBwLmxpc3Rlbih7IHBvcnQ6IDgwMDAgfSwgKCkgPT4ge1xuICAvL01lc3NhZ2UgZCdhZmZpY2hhZ2UgbG9yc3F1ZSBsZSBzZXJ2ZXVyIGVzdCBlbiBsaWduZVxuICBjb25zb2xlLmxvZygnQXBvbGxvIFNlcnZlciBvbiBodHRwOi8vbG9jYWxob3N0OjgwMDAvZ3JhcGhxbCcpO1xufSk7XG4vL0xhbmNlbWVudCBkZSBjb3JzXG5hcHAudXNlKGNvcnMoKSk7XG5cblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "console",
        "log",
        "process",
        "env",
        "MY_SECRET",
        "msg",
        "require",
        "app",
        "schema",
        "gql",
        "users",
        "id",
        "username",
        "messageIds",
        "messages",
        "text",
        "userId",
        "resolvers",
        "Query",
        "Object",
        "values",
        "me",
        "parent",
        "args",
        "user",
        "message",
        "User",
        "filter",
        "userID",
        "Message",
        "Mutation",
        "createMessage",
        "push",
        "deleteMessage",
        "otherMessages",
        "server",
        "ApolloServer",
        "typeDefs",
        "context",
        "applyMiddleware",
        "path",
        "listen",
        "port",
        "use"
      ],
      "mappings": "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",
      "sourceRoot": "/home/pandahome/Becode/test_p_1/src",
      "sourcesContent": [
        "//Cette import permet de manipuler des dossier depuis le .env avec le fichier js( Voir Comment 1)\nimport 'dotenv/config';\n// On importe la fonction hi depuis le fichier page_1 \nimport hi from \"./page_1.js\" ;\n//Express est un framework qui permet de gerer des serveurs. On l'utilise ici avec apollo. \nimport express from 'express';\n//Apollo serveur est un framework permetannt de creer et gerer des bases de donnée avec graphql\nimport { ApolloServer, gql } from 'apollo-server-express';\n//Nous permet d'accepeter plusieur demande de plusieur sources.\nimport cors from 'cors';\n//1 . On affcihe dans la console une valeur stockée dans le .env\nconsole.log(process.env.MY_SECRET);\n// On appelle notre fonction (\"concole log depuis le fichier page 1\")\nlet msg = require(\"./page_1.js\");\n// Ce framework permet de donner un id unique a chaque fois qu'il est call\nimport uuidv4 from 'uuid/v4';\n\n\n\n// On lance le serveur express en l'initalisant dans une constante\nconst app = express();\n// On construit ici le schema de notre \"base de donnée\"\n//Le schema est un liste de definitions de type. On commence par le type Query puis on remplis les differents champs(User,Message) de la DB\n//gql´...` est le format GraphQl de la DB\n//Pour le premier \"users : [User!]\" On cree un type users que tous les users possede par defaut et qui est obligatoire\n//Pour le second \"me :User\" On definis un objet me de typer User. Dans ce ca il a le \"scalar type(champ classique)\" username(string) et id(ID)\n//'!' veut dire que ces champs ne peuvent pas etre null \n// Message \nconst schema = gql`\n  type Query {\n    me: User\n\n    users: [User!]\n    user(id : ID!) : User\n\n    messages: [Message!]!\n    message(id: ID!): Message!\n  }\n  type User {\n    username: String!\n    id :ID!\n    messages: [Message!]\n  }\n  type Message{\n    id: ID!\n    text: String!\n    user: User!\n  }\n  type Mutation {\n    createMessage(text: String!): Message!\n    deleteMessage(id: ID!): Boolean!\n  }\n`;\n//User est une table qui est composée des champ Id et usernam\nlet users = {\n  1: {\n    id: '1',\n    username: 'Robin Wieruch',\n    messageIds :[1],\n  },\n  2: {\n    id: '2',\n    username: 'Dave Davids',\n    messageIds :[2],\n  },\n};\n//message est une table qui est composée des champ Id et usernam\nlet messages = {\n  1: {\n    id: '1',\n    text: 'Hello World',\n    userId : '1',\n  },\n  2: {\n    id: '2',\n    text: 'By World',\n    userId : '2',\n  },\n};\n// On defenis une variable \"me\" qui prend comme champ le premier user comme champ\n//const me = users[1]; Plus besoin de l'utiliser car il est init dans l'argument contexte(3eme argument) de Apollo serveur \n// Le resolvers permet d'aller chercher les donnée dans la DB c'est ici que tous les query devront etre effectuée\nconst resolvers = {\n\n  Query: {\n\n    // On renvoie l'ensemble des donnée de la table users \n    users: () => {\n      return Object.values(users);\n    },\n\n    // On renvoie toutes les données de 'me'\n    // Le 3 eme 'me' argument viens de context.\n    me: (parent, args, { me }) => {\n      return me;\n    },\n\n    //On renvoie les donnée d'un user ciblé en fonction de son ID\n    user: (parent, {id}) => {\n      return users[id];\n    },\n\n    //On renvoie l'ensemble des donnée de la table message\n    messages: () => {\n      return Object.values(messages);\n    },\n\n    //On renvoie les donnée d'un message ciblé en fonction de son ID\n    message: (parent, { id }) => {\n      return messages[id];\n    }, \n  },\n  \n  User : {\n    messages:user => {\n      return Object.values(messages).filter(\n        message => message.userID === user.id\n      )\n    },\n  },\n\n\n  Message: {\n    user: message => {\n      return users[message.userId]\n    },\n  },\n\n  Mutation : {\n    createMessage: (parent, {text} , {me}) => {\n      const id = uuidv4();\n      const message = {\n        id,\n        text,\n        userId : me.id,\n      };\n      messages[id] = message;\n      users[me.id].messageIds.push(id);\n      return message\n    },\n    deleteMessage:(parent, { id }) =>{\n      const{[ id ]: message, ...otherMessages }= messages;\n\n      if(!message) {\n        return false\n      }\n      messages = otherMessages;\n      return true;\n    }\n  },\n  \n\n  // Ici on impose a tous les usernames la valeur 'Hans'\n  // User: {\n  //     username: () => 'Hans',\n  // },\n\n  //Ici on renvoie le parent de username lorsque l'on demande le username(redondant)\n  // User: {\n  //   username: parent => {\n  //     return parent.username;\n  //   }\n  // }\n\n  //On definis ici a username un nom et prenom\n  // User: {\n  //   username: user => `${user.firstname} ${user.lastname}`,\n  // },\n\n};\n\n//On lance le serveur Apollo\nconst server = new ApolloServer({\n  // Definitions des types -> schema et requete faite avec resolvers\n  typeDefs: schema,\n  resolvers,\n  context: {\n    me: users[1],\n  },\n});\n\n\n//On utilise ici 'applyMiddleware' pour lancer express avec le serveur appollo pour lancer Graphql playground\n//On lance dans le navigateur localhost:8000/graphql pour acceder a la page de graphql playground\nserver.applyMiddleware({ app, path: '/graphql' });\n//On lance notre page sur le port 8000\napp.listen({ port: 8000 }, () => {\n  //Message d'affichage lorsque le serveur est en ligne\n  console.log('Apollo Server on http://localhost:8000/graphql');\n});\n//Lancement de cors\napp.use(cors());\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578143122001
  },
  "{\"sourceRoot\":\"/home/pandahome/Becode/test_p_1/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/pandahome/Becode/test_p_1\",\"filename\":\"/home/pandahome/Becode/test_p_1/src/page_1.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/pandahome/Becode/test_p_1\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.7": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/pandahome/Becode/test_p_1/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/pandahome/Becode/test_p_1",
      "filename": "/home/pandahome/Becode/test_p_1/src/page_1.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/pandahome/Becode/test_p_1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/pandahome/Becode/test_p_1/src/page_1.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/pandahome/Becode/test_p_1/src/page_1.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/pandahome/Becode/test_p_1/src",
        "sourceFileName": "page_1.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar hi = function hi() {\n  console.log(\"Hey je suis de la page 1\");\n};\n\nmodule[\"export\"] = hi();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhZ2VfMS5qcyJdLCJuYW1lcyI6WyJoaSIsImNvbnNvbGUiLCJsb2ciLCJtb2R1bGUiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBTUEsRUFBRSxHQUFHLFNBQUxBLEVBQUssR0FBVTtBQUNqQkMsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksMEJBQVo7QUFDSCxDQUZEOztBQUdBQyxNQUFNLFVBQU4sR0FBZ0JILEVBQUUsRUFBbEIiLCJzb3VyY2VSb290IjoiL2hvbWUvcGFuZGFob21lL0JlY29kZS90ZXN0X3BfMS9zcmMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBoaSA9IGZ1bmN0aW9uKCl7XG4gICAgY29uc29sZS5sb2coXCJIZXkgamUgc3VpcyBkZSBsYSBwYWdlIDFcIik7XG59XG5tb2R1bGUuZXhwb3J0ID0gaGkoKSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "page_1.js"
      ],
      "names": [
        "hi",
        "console",
        "log",
        "module"
      ],
      "mappings": ";;AAAA,IAAMA,EAAE,GAAG,SAALA,EAAK,GAAU;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACH,CAFD;;AAGAC,MAAM,UAAN,GAAgBH,EAAE,EAAlB",
      "sourceRoot": "/home/pandahome/Becode/test_p_1/src",
      "sourcesContent": [
        "const hi = function(){\n    console.log(\"Hey je suis de la page 1\");\n}\nmodule.export = hi()"
      ]
    },
    "sourceType": "script",
    "mtime": 1577551098950
  }
}